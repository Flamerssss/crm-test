"use strict"; (self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[1341], { 71341: function (t, n, r) { r.d(n, { Ac: function () { return R }, Cq: function () { return I }, Dh: function () { return ct }, Fo: function () { return Y }, HL: function () { return rt }, KN: function () { return F }, LB: function () { return w }, LI: function () { return K }, Lo: function () { return S }, Mx: function () { return Q }, Pb: function () { return j }, Tf: function () { return U }, Ux: function () { return H }, ew: function () { return k }, gq: function () { return N }, iS: function () { return _ }, km: function () { return O }, lM: function () { return ut }, nD: function () { return l }, qJ: function () { return y }, qt: function () { return tt }, sN: function () { return W }, t: function () { return p }, xF: function () { return b }, xg: function () { return h }, yG: function () { return E } }); var e = r(34051), c = r.n(e), o = r(1902); r(96621); function u(t, n, r, e, c, o, u) { try { var a = t[o](u), i = a.value } catch (s) { return void r(s) } a.done ? n(i) : Promise.resolve(i).then(e, c) } function a(t) { return function () { var n = this, r = arguments; return new Promise((function (e, c) { var o = t.apply(n, r); function a(t) { u(o, e, c, a, i, "next", t) } function i(t) { u(o, e, c, a, i, "throw", t) } a(void 0) })) } } function i(t, n, r) { return n in t ? Object.defineProperty(t, n, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : t[n] = r, t } function s(t) { for (var n = 1; n < arguments.length; n++) { var r = null != arguments[n] ? arguments[n] : {}, e = Object.keys(r); "function" === typeof Object.getOwnPropertySymbols && (e = e.concat(Object.getOwnPropertySymbols(r).filter((function (t) { return Object.getOwnPropertyDescriptor(r, t).enumerable })))), e.forEach((function (n) { i(t, n, r[n]) })) } return t } function p(t, n, r, e) { return f.apply(this, arguments) } function f() { return (f = a(c().mark((function t(n, r, e, u) { var a, i; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(r).doc("company").collection(n).where(e, "==", u).get(); case 2: return a = t.sent, i = a.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", i); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function l(t) { return d.apply(this, arguments) } function d() { return (d = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("contracts").orderBy("contract_number", "desc").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function h(t) { return m.apply(this, arguments) } function m() { return (m = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("cars").where("car_status", "==", "Available").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function y(t) { return v.apply(this, arguments) } function v() { return (v = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("contracts").where("contract_status", "==", "InRent").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function w(t) { return x.apply(this, arguments) } function x() { return (x = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("contracts").where("contract_status", "==", "Booked").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function b(t) { return g.apply(this, arguments) } function g() { return (g = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("cars").orderBy("car_code", "asc").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function k(t) { return Z.apply(this, arguments) } function Z() { return (Z = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("cars").where("car_status", "==", "Inservice").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function _(t) { return P.apply(this, arguments) } function P() { return (P = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("staff").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function O(t) { return C.apply(this, arguments) } function C() { return (C = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("tasks").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function E(t) { return L.apply(this, arguments) } function L() { return (L = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("fleets").orderBy("created_at", "asc").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function j(t) { return B.apply(this, arguments) } function B() { return (B = a(c().mark((function t(n) { var r; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return r = o.Z.firestore().collection(n).doc("company").collection("tariff"), t.abrupt("return", r.get().then((function (t) { var n = []; return t.forEach((function (t) { n.push(s({}, t.data())) })), Promise.all(n).then((function (t) { return t.map((function (t) { return { id: t.id, tariff_name: t.tariff_name } })) })) }))); case 2: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function S(t) { return q.apply(this, arguments) } function q() { return (q = a(c().mark((function t(n) { var r; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return r = o.Z.firestore().collection(n).doc("company").collection("carsCategory"), t.abrupt("return", r.get().then((function (t) { var n = []; return t.forEach((function (t) { n.push(s({}, t.data())) })), Promise.all(n).then((function (t) { return t.map((function (t) { return { id: t.id, name: t.name, created_at: t.created_at } })) })) }))); case 2: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function N(t) { return D.apply(this, arguments) } function D() { return (D = a(c().mark((function t(n) { var r; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return r = o.Z.firestore().collection(n).doc("company").collection("carStatus"), t.abrupt("return", r.get().then((function (t) { var n = []; return t.forEach((function (t) { n.push(s({}, t.data())) })), Promise.all(n).then((function (t) { return t.map((function (t) { return { id: t.id, name: t.name } })) })) }))); case 2: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function I(t) { return A.apply(this, arguments) } function A() { return (A = a(c().mark((function t(n) { var r; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return r = o.Z.firestore().collection(n).doc("company").collection("owners"), t.abrupt("return", r.get().then((function (t) { var n = []; return t.forEach((function (t) { n.push(s({}, t.data())) })), Promise.all(n).then((function (t) { return t.map((function (t) { return { id: t.id, owner_fullname: t.owner_fullname } })) })) }))); case 2: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function F() { return M.apply(this, arguments) } function M() { return (M = a(c().mark((function t() { var n, r; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(" car_brand").get(); case 2: return n = t.sent, r = n.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", r); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function R(t) { return G.apply(this, arguments) } function G() { return (G = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("clients").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function H(t) { return J.apply(this, arguments) } function J() { return (J = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("ClientsStatusList").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function K(t) { return T.apply(this, arguments) } function T() { return (T = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("ClientsCatList").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function U(t) { return z.apply(this, arguments) } function z() { return (z = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("fines").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function Q(t) { return V.apply(this, arguments) } function V() { return (V = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("photoRew").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function W(t) { return X.apply(this, arguments) } function X() { return (X = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("maintenance").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function Y(t) { return $.apply(this, arguments) } function $() { return ($ = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("counterparties").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function tt(t) { return nt.apply(this, arguments) } function nt() { return (nt = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("nomenclature").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function rt(t) { return et.apply(this, arguments) } function et() { return (et = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("tariffs").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function ct(t) { return ot.apply(this, arguments) } function ot() { return (ot = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("staff").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } function ut(t) { return at.apply(this, arguments) } function at() { return (at = a(c().mark((function t(n) { var r, e; return c().wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: return t.next = 2, o.Z.firestore().collection(n).doc("company").collection("owners").get(); case 2: return r = t.sent, e = r.docs.map((function (t) { return s({}, t.data()) })), t.abrupt("return", e); case 5: case "end": return t.stop() } }), t) })))).apply(this, arguments) } } }]);